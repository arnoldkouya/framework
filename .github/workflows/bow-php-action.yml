name: Bow Framework CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

env:
  FTP_HOST: localhost
  FTP_USER: bob
  FTP_PASSWORD: 12345
  FTP_PORT: 21

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    name: PHP-${{ matrix.php }} - ${{ matrix.os }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        php: [7.4, 7.3, 7.2]
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

      - run: docker run --net=host -p 21:21 -e USER=$FTP_USER -e PASS=$FTP_PASSWORD -d --name ftp -v $(pwd)/:/ftp/$FTP_USER emilybache/vsftpd-server

      - run: docker run -p 1025:25 -p 1080:80 -d --name maildev maildev/maildev

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          # mysql -u root -e "CREATE DATABASE IF NOT EXISTS test_db;" --protocol=TCP

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Create test cache directory
        run: if [ ! -d ./tests/data/cache ]; then mkdir -p ./tests/data/cache; fi;

      - name: Check code standard
        run: ./vendor/bin/phpcs --standard=psr2 --severity=4 --tab-width=4 src --ignore="tests"

      - name: Run test suite
        run: composer run-script test

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@master
      #   if: failure()
      #   with:
      #     name: Logs
      #     path: ./.github